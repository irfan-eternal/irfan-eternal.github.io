<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Reverse Engineering - Category - irfan_eternal</title><link>https://irfan-eternal.github.io/categories/reverse-engineering/</link><description>Reverse Engineering - Category - irfan_eternal</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>irfan_eternal@proton.me (irfan_eternal)</managingEditor><webMaster>irfan_eternal@proton.me (irfan_eternal)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 28 Dec 2022 11:35:00 +0800</lastBuildDate><atom:link href="https://irfan-eternal.github.io/categories/reverse-engineering/" rel="self" type="application/rss+xml"/><item><title>Analysing Shellcode to understand how they call windows API's</title><link>https://irfan-eternal.github.io/analysing-shellcode-to-understand-how-they-call-windows-apis/</link><pubDate>Wed, 28 Dec 2022 11:35:00 +0800</pubDate><author>irfan_eternal</author><guid>https://irfan-eternal.github.io/analysing-shellcode-to-understand-how-they-call-windows-apis/</guid><description><![CDATA[<div class="featured-image">
                <img src="/shellcode.jpg" referrerpolicy="no-referrer">
            </div>Introduction Hi all, Today we will be Analysing Shellcode to understand how they call windows API&rsquo;s. shellcode&rsquo;s are position independent, they do not have IAT to call API&rsquo;s. They normally walk the PEB(Process Environment Block).To understand theory on how PEB is used to get API&rsquo;s please read this article We will follow how a malware use this technique to call windows API&rsquo;s .
Analysis The malware First allocates memory and copies the shellcode from the rsrc section to the allocated memory]]></description></item></channel></rss>